// automatically generated by the FlatBuffers compiler, do not modify

package teleporter.integration.cluster.rpc.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RangeRegexKV extends Table {
  public static RangeRegexKV getRootAsRangeRegexKV(ByteBuffer _bb) { return getRootAsRangeRegexKV(_bb, new RangeRegexKV()); }
  public static RangeRegexKV getRootAsRangeRegexKV(ByteBuffer _bb, RangeRegexKV obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RangeRegexKV __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String key() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer keyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public int start() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int limit() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createRangeRegexKV(FlatBufferBuilder builder,
      int keyOffset,
      int start,
      int limit) {
    builder.startObject(3);
    RangeRegexKV.addLimit(builder, limit);
    RangeRegexKV.addStart(builder, start);
    RangeRegexKV.addKey(builder, keyOffset);
    return RangeRegexKV.endRangeRegexKV(builder);
  }

  public static void startRangeRegexKV(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(0, keyOffset, 0); }
  public static void addStart(FlatBufferBuilder builder, int start) { builder.addInt(1, start, 0); }
  public static void addLimit(FlatBufferBuilder builder, int limit) { builder.addInt(2, limit, 0); }
  public static int endRangeRegexKV(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

